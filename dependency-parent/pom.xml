<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <groupId>ro.rasel</groupId>
    <artifactId>dependency-parent</artifactId>
    <version>1.0.0-${project.version.type}</version>
    <packaging>pom</packaging>

    <description>Parent pom which defines maven configuration common to all modules.</description>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.type>SNAPSHOT</project.type>
        <project.version.type>${project.type}</project.version.type>

        <spring-cloud.version>1.4.3.RELEASE</spring-cloud.version>
        <spring-cloud-security.version>1.2.2.RELEASE</spring-cloud-security.version>
        <spring-security-oauth2.version>2.2.1.RELEASE</spring-security-oauth2.version>
        <swagger.version>2.8.0</swagger.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--Spring Cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zuul</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka-server</artifactId>
                <version>${spring-cloud.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <!--Spring Security-->
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring-security-oauth2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-security</artifactId>
                <version>${spring-cloud-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>1.0.9.RELEASE</version>
            </dependency>

            <!--Swagger-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!--Apache Commons-->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>http://repo.spring.io/libs-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/libs-milestone-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>http://repo.spring.io/libs-release-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <snapshotRepository>
            <id>project.local</id>
            <name>project</name>
            <url>file:${project.basedir}/../.repo/snasphot</url>
        </snapshotRepository>
        <repository>
            <id>project.local</id>
            <name>project</name>
            <url>file:${project.basedir}/../.repo/release</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release</id>
            <properties>
                <project.type>RELEASE</project.type>
            </properties>
        </profile>
        <profile>
            <id>generate</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>generate</id>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <properties>
                                        <workingDir>${project.basedir}</workingDir>
                                    </properties>
                                    <scripts>
                                        <script>
                                            <![CDATA[
                                            String currentBranch = "git symbolic-ref HEAD".execute().inputStream.readLines()[0]
                                            String buildNumber = "git rev-list --count ${currentBranch}".execute().inputStream.readLines()[0]

                                            new File("${workingDir}"+File.separator+"qualifier.txt").write(buildNumber);

                                            def projectTypes=Arrays.asList("SNAPSHOT","RELEASE")
                                            for(String projectType:projectTypes){
                                                def fileType=projectType.charAt(0).toString()+projectType.substring(1).toLowerCase()

                                                def pomFile = new File("${workingDir}"+File.separator+"pom.xml")
                                                def deployPomFilePath = "${workingDir}"+File.separator+"deploy${fileType}Pom.xml"
                                                def deployPomFile = new File(deployPomFilePath)
                                                def text = pomFile.text

                                                text=text.replaceAll("\\\$\\{qualifier\\}","."+buildNumber)
                                                text=text.replaceAll("(?<=<parent>[\\n\\t \\w.\\d<>/-]{0,999})(\\d+\\.\\d+\\.\\d+[-.])SNAPSHOT(?=[\\n\\t \\w.\\d<>/-]{0,999}</parent>)","\$1${projectType}")
                                                text=text.replaceAll("\\\$\\{project.version.type\\}","${projectType}")
                                                text=text.replaceAll("(?<=<project.version.type>)SNAPSHOT(?=</project.version.type>)","${projectType}")
                                                deployPomFile.write(text)
                                            }
                                            ]]>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.4.3</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <properties>
                                        <workingDir>${project.basedir}</workingDir>
                                    </properties>
                                    <scripts>
                                        <script>
                                            <![CDATA[
                                            def projectType="${project.type}"
                                            fileType=projectType.charAt(0).toString()+projectType.substring(1).toLowerCase()

                                            def deployPomFilePath = "${workingDir}"+File.separator+"deploy${fileType}Pom.xml"
                                            def deployPomFile = new File(deployPomFilePath)

                                            def process= "cmd /c start /B mvn clean deploy -f ${deployPomFilePath}".execute()
                                            if (process.waitFor()!=0){
                                                throw new RuntimeException("process failed:\n" + process.err.text)
                                            }
                                            ]]>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.4.3</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>listProperties</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echoproperties/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
