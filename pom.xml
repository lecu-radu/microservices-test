<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ro.rasel</groupId>
    <artifactId>spring-microservices</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.type>SNAPSHOT</project.type>
    </properties>

    <modules>
        <module>dependency-parent</module>
        <module>starter-parent</module>
        <module>commons</module>
        <module>spring-commons</module>
        <module>eureka-service</module>
        <module>eureka-client-component</module>
        <module>ssl-component</module>
        <module>security-sso-component</module>
        <module>swagger-component</module>
        <module>domain-interfaces</module>
        <module>security-sso-auth-server</module>
        <module>bookmark-service</module>
        <module>contact-service</module>
        <module>passport-service</module>
        <module>client-service</module>
        <module>client-service-light</module>
        <module>hystrix-dashboard-service</module>
        <module>security-sso-ui</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.5</version>
                    <configuration>
                        <properties>
                            <workingDir>${project.basedir}</workingDir>
                        </properties>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-all</artifactId>
                            <version>2.4.3</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <properties>
                <project.type>RELEASE</project.type>
            </properties>
        </profile>
        <profile>
            <id>deployAll</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate</id>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <![CDATA[
                                            def projectType="${project.type}"
                                            def fileType=projectType.charAt(0).toString()+projectType.substring(1).toLowerCase()
                                            def deployPomFileName = "deploy${fileType}Pom.xml"
                                            String genScript=""

                                            for (String property:session.allProjects){
                                                if(!property.contains("ro.rasel:microservices-test")){
                                                    def dir =  property.replaceAll(".*@ (.*)\\\\pom.xml","\$1")
                                                    genScript+="cd ${dir}\n"
                                                    genScript+="start /B mvn clean deploy -f ${deployPomFileName}\n"
                                                }
                                            }

                                            File genScriptFile=File.createTempFile("test",".bat")
                                            genScriptFile.deleteOnExit()
                                            genScriptFile.write(genScript)
                                            def process = "cmd /c start /B ${genScriptFile}".execute(Arrays.asList("path="+System.getenv("path")),new File("${workingDir}"))
                                            if (process.waitFor()!=0){
                                                throw new RuntimeException("process failed:\n" + process.err.text)
                                            }
                                            ]]>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

