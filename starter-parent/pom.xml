<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <groupId>ro.rasel</groupId>
    <artifactId>starter-parent</artifactId>
    <version>1.0.0${qualifier}-${project.version.type}</version>
    <packaging>pom</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.version.type>SNAPSHOT</project.version.type>
        <qualifier></qualifier>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ro.rasel</groupId>
                <artifactId>dependency-parent</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>project.local</id>
            <name>project</name>
            <url>file:${project.basedir}/../.repo/snasphot</url>
        </snapshotRepository>
        <repository>
            <id>project.local</id>
            <name>project</name>
            <url>file:${project.basedir}/../.repo/release</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release</id>
            <properties>
                <project.version.type>RELEASE</project.version.type>
            </properties>
        </profile>
        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <![CDATA[
                                    String currentBranch = "git symbolic-ref HEAD".execute().inputStream.readLines()[0]
                                    String buildNumber = "git rev-list --count ${currentBranch}".execute().inputStream.readLines()[0]
                                    def pomFile = new File("pom.xml")
                                    def deployPomFileName = "deployPom.xml"
                                    def deployPomFile = new File(deployPomFileName)
                                    def text = pomFile.text
                                    text=text.replaceAll("\\\$\\{qualifier\\}","."+buildNumber)
                                    text=text.replaceAll("\\\$\\{project.version.type\\}","${project.version.type}")
                                    text=text.replaceAll("(?<=<project.version.type>)SNAPSHOT(?=</project.version.type>)","${project.version.type}")
                                    deployPomFile.write(text)
                                    def process= "cmd /c mvn clean deploy -f ${deployPomFileName}".execute()
                                    if (process.waitFor()!=0){
                                        throw new RuntimeException("process failed:\n" + process.err.text)
                                    }
                                    ]]>
                                        </script>
                                    </scripts>
                                </configuration>

                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.4.3</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>listProperties</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echoproperties/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
